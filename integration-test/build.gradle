buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "${project.group}:spek-gradle-plugin"
    }
}

apply plugin: 'kotlin-multiplatform'
apply plugin: "${project.group}.gradle-plugin"
apply from: "$rootDir/gradle/common/dependencies.gradle"

kotlin {
    jvm()
    linuxX64("linux")
    macosX64("macOS")
    mingwX64("windows")

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }

        commonTest {
            dependencies {
                implementation project(':spek-dsl')
                implementation kotlin('test')
            }
        }

        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }

        jvmTest {
            dependencies {
                runtimeOnly kotlin('reflect')
                runtimeOnly project(':spek-runner:junit5')
            }
        }

        nativeMain {
            dependsOn commonMain
        }

        nativeTest {
            dependsOn commonTest
        }

        linuxMain {
            dependsOn nativeMain
        }

        macOSMain {
            dependsOn nativeMain
        }

        windowsMain {
            dependsOn nativeMain
        }

        linuxTest {
            dependsOn nativeTest
        }

        macOSTest {
            dependsOn nativeTest
        }

        windowsTest {
            dependsOn nativeTest
        }
    }
}

jvmTest {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

// This is required to substitute the version of spek-runtime applied automatically by spek-gradle-plugin with the version provided by the spek-runtime project
// (rather than trying to download the not-yet-published version from a Maven repository).
configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module("$group:spek-runtime") with project(":spek-runtime")
    }
}
