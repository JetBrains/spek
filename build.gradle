import java.nio.file.Files
import java.nio.file.Paths

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.17'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.4.2"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

plugins {
    id 'org.ajoberstar.reckon' version '0.9.0' apply false
}

apply from: 'gradle/common/versioning.gradle'

allprojects {
    repositories {
        jcenter()
    }

    if (Files.exists(Paths.get("$rootDir/local.properties"))) {
        def localProperties = new Properties()
        localProperties.load(new FileInputStream("$rootDir/local.properties"))
        localProperties.each { prop -> project.ext.set(prop.key, prop.value) }
    }

    def releaseMode = false
    if ("$version".matches("^\\d+\\.\\d+\\.\\d+(-rc\\.\\d+)?")) {
        releaseMode = true
    }
    project.ext.releaseMode = releaseMode


    apply plugin: 'idea'
}

[
    'check',
    'build',
    'clean'
].forEach { taskName ->
   task(taskName) {
       gradle.ext.includedBuilds.forEach { includedBuild ->
           dependsOn gradle.includedBuild(includedBuild).task(":$taskName")
       }
   }
}
